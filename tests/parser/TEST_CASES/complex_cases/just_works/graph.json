{
    "directed": true,
    "multigraph": true,
    "graph": {
        "full_script": {
            "main": {
                "re": "import re",
                "TRANSITIONS": "from dff.script.core.keywords import TRANSITIONS",
                "RESPONSE": "from dff.script.core.keywords import RESPONSE",
                "GLOBAL": "from dff.script.core.keywords import GLOBAL",
                "MISC": "from dff.script.core.keywords import MISC",
                "cnd": "import dff.script.conditions",
                "lbl": "import dff.script.labels",
                "rsp": "import dff.script.responses",
                "Pipeline": "from dff.pipeline import Pipeline",
                "transitions": "import transitions",
                "global_flow": "from flow import global_flow",
                "script": {
                    "GLOBAL": {
                        "TRANSITIONS": {
                            "('greeting_flow', 'node1', 1.1)": "cnd.regexp('\\\\b(hi|hello)\\\\b', re.I)",
                            "('music_flow', 'node1', 1.1)": "cnd.regexp('talk about music')",
                            "lbl.to_fallback(0.1)": "cnd.true()",
                            "lbl.forward()": "cnd.all([cnd.regexp('next\\\\b'), cnd.has_last_labels(labels=[('music_flow', i) for i in ['node2', 'node3']])])",
                            "lbl.repeat(0.2)": "cnd.all([cnd.regexp('repeat', re.I), cnd.negation(cnd.has_last_labels(flow_labels=['global_flow']))])"
                        },
                        "MISC": {
                            "'var1'": "'global_data'",
                            "'var2'": "'global_data'",
                            "'var3'": "'global_data'"
                        },
                        "RESPONSE": "\"''\""
                    },
                    "'global_flow'": "global_flow",
                    "'greeting_flow'": {
                        "'node1'": {
                            "RESPONSE": "rsp.choice(['Hi, what is up?', 'Hello, how are you?'])",
                            "TRANSITIONS": {
                                "('global_flow', 'fallback_node', 0.1)": "cnd.true()",
                                "'node2'": "cnd.regexp('how are you')"
                            },
                            "MISC": {
                                "'var3'": "'info_of_step_1'"
                            }
                        },
                        "'node2'": {
                            "RESPONSE": "'Good. What do you want to talk about?'",
                            "TRANSITIONS": {
                                "lbl.to_fallback(0.1)": "cnd.true()",
                                "lbl.forward(0.5)": "cnd.regexp('talk about')",
                                "('music_flow', 'node1')": "cnd.regexp('talk about music')",
                                "lbl.previous()": "cnd.regexp('previous', re.IGNORECASE)"
                            }
                        },
                        "'node3'": {
                            "RESPONSE": "foo",
                            "TRANSITIONS": {
                                "lbl.forward()": "cnd.regexp('bye')"
                            }
                        },
                        "'node4'": {
                            "RESPONSE": "bar('bye')",
                            "TRANSITIONS": {
                                "'node1'": "cnd.regexp('hi|hello', re.IGNORECASE)",
                                "lbl.to_fallback()": "cnd.true()"
                            }
                        }
                    },
                    "'music_flow'": {
                        "'node1'": {
                            "RESPONSE": "'I love `System of a Down` group, would you like to tell about it? '",
                            "TRANSITIONS": {
                                "lbl.forward()": "cnd.regexp('yes|yep|ok', re.IGNORECASE)",
                                "lbl.to_fallback()": "cnd.true()"
                            }
                        },
                        "'node2'": {
                            "RESPONSE": "'System of a Down is an Armenian-American heavy metal band formed in in 1994.'",
                            "TRANSITIONS": {
                                "lbl.forward()": "cnd.regexp('next', re.IGNORECASE)",
                                "lbl.repeat()": "cnd.regexp('repeat', re.IGNORECASE)",
                                "lbl.to_fallback()": "cnd.true()"
                            }
                        },
                        "'node3'": {
                            "RESPONSE": "'The band achieved commercial success with the release of five studio albums.'",
                            "TRANSITIONS": {
                                "lbl.forward()": "cnd.regexp('next', re.IGNORECASE)",
                                "lbl.backward()": "cnd.regexp('back', re.IGNORECASE)",
                                "lbl.repeat()": "cnd.regexp('repeat', re.IGNORECASE)",
                                "lbl.to_fallback()": "cnd.true()"
                            }
                        },
                        "'node4'": {
                            "RESPONSE": "\"That's all what I know\"",
                            "TRANSITIONS": {
                                "transitions.greeting_flow_n2_transition": "cnd.regexp('next', re.IGNORECASE)",
                                "transitions.high_priority_node_transition('greeting_flow', 'node4')": "cnd.regexp('next time', re.IGNORECASE)",
                                "lbl.to_fallback()": "cnd.true()"
                            }
                        }
                    }
                },
                "pipeline": "Pipeline.from_script(fallback_label=('global_flow', 'fallback_node'), script=script, start_label=('global_flow', 'start_node'))"
            },
            "flow": {
                "TRANSITIONS": "from dff.script.core.keywords import TRANSITIONS",
                "RESPONSE": "from dff.script.core.keywords import RESPONSE",
                "cnd": "import dff.script.conditions",
                "lbl": "import dff.script.labels.std_labels",
                "re": "import re",
                "global_flow": {
                    "'start_node'": {
                        "RESPONSE": "''",
                        "TRANSITIONS": {
                            "('music_flow', 'node1')": "cnd.regexp('talk about music')",
                            "('greeting_flow', 'node1')": "cnd.regexp('hi|hello', re.IGNORECASE)",
                            "'fallback_node'": "cnd.true()"
                        }
                    },
                    "'fallback_node'": {
                        "RESPONSE": "'Ooops'",
                        "TRANSITIONS": {
                            "('music_flow', 'node1')": "cnd.regexp('talk about music')",
                            "('greeting_flow', 'node1')": "cnd.regexp('hi|hello', re.IGNORECASE)",
                            "lbl.previous()": "cnd.regexp('previous', re.IGNORECASE)",
                            "lbl.repeat()": "cnd.true()"
                        }
                    }
                }
            }
        },
        "start_label": [
            "'global_flow'",
            "'start_node'"
        ],
        "fallback_label": [
            "'global_flow'",
            "'fallback_node'"
        ]
    },
    "nodes": [
        {
            "ref": [
                "main",
                "script",
                "value",
                "value_GLOBAL"
            ],
            "id": [
                "GLOBAL_NODE",
                "GLOBAL"
            ]
        },
        {
            "ref": [
                "main",
                "script",
                "value",
                "value_'greeting_flow'",
                "value_'node1'"
            ],
            "id": [
                "NODE",
                "'greeting_flow'",
                "'node1'"
            ]
        },
        {
            "ref": [
                "main",
                "script",
                "value",
                "value_'music_flow'",
                "value_'node1'"
            ],
            "id": [
                "NODE",
                "'music_flow'",
                "'node1'"
            ]
        },
        {
            "id": [
                "LABEL",
                "to_fallback",
                [
                    "priority",
                    "0.1"
                ],
                [
                    "args",
                    "()"
                ],
                [
                    "kwargs",
                    "{}"
                ]
            ]
        },
        {
            "id": [
                "LABEL",
                "forward",
                [
                    "priority",
                    "None"
                ],
                [
                    "cyclicality_flag",
                    "True"
                ],
                [
                    "args",
                    "()"
                ],
                [
                    "kwargs",
                    "{}"
                ]
            ]
        },
        {
            "id": [
                "LABEL",
                "repeat",
                [
                    "priority",
                    "0.2"
                ],
                [
                    "args",
                    "()"
                ],
                [
                    "kwargs",
                    "{}"
                ]
            ]
        },
        {
            "ref": [
                "flow",
                "global_flow",
                "value",
                "value_'start_node'"
            ],
            "id": [
                "NODE",
                "'global_flow'",
                "'start_node'"
            ]
        },
        {
            "ref": [
                "flow",
                "global_flow",
                "value",
                "value_'fallback_node'"
            ],
            "id": [
                "NODE",
                "'global_flow'",
                "'fallback_node'"
            ]
        },
        {
            "id": [
                "LABEL",
                "previous",
                [
                    "priority",
                    "None"
                ],
                [
                    "args",
                    "()"
                ],
                [
                    "kwargs",
                    "{}"
                ]
            ]
        },
        {
            "id": [
                "LABEL",
                "repeat",
                [
                    "priority",
                    "None"
                ],
                [
                    "args",
                    "()"
                ],
                [
                    "kwargs",
                    "{}"
                ]
            ]
        },
        {
            "ref": [
                "main",
                "script",
                "value",
                "value_'greeting_flow'",
                "value_'node2'"
            ],
            "id": [
                "NODE",
                "'greeting_flow'",
                "'node2'"
            ]
        },
        {
            "id": [
                "LABEL",
                "forward",
                [
                    "priority",
                    "0.5"
                ],
                [
                    "cyclicality_flag",
                    "True"
                ],
                [
                    "args",
                    "()"
                ],
                [
                    "kwargs",
                    "{}"
                ]
            ]
        },
        {
            "ref": [
                "main",
                "script",
                "value",
                "value_'greeting_flow'",
                "value_'node3'"
            ],
            "id": [
                "NODE",
                "'greeting_flow'",
                "'node3'"
            ]
        },
        {
            "ref": [
                "main",
                "script",
                "value",
                "value_'greeting_flow'",
                "value_'node4'"
            ],
            "id": [
                "NODE",
                "'greeting_flow'",
                "'node4'"
            ]
        },
        {
            "id": [
                "LABEL",
                "to_fallback",
                [
                    "priority",
                    "None"
                ],
                [
                    "args",
                    "()"
                ],
                [
                    "kwargs",
                    "{}"
                ]
            ]
        },
        {
            "ref": [
                "main",
                "script",
                "value",
                "value_'music_flow'",
                "value_'node2'"
            ],
            "id": [
                "NODE",
                "'music_flow'",
                "'node2'"
            ]
        },
        {
            "ref": [
                "main",
                "script",
                "value",
                "value_'music_flow'",
                "value_'node3'"
            ],
            "id": [
                "NODE",
                "'music_flow'",
                "'node3'"
            ]
        },
        {
            "id": [
                "LABEL",
                "backward",
                [
                    "priority",
                    "None"
                ],
                [
                    "cyclicality_flag",
                    "True"
                ],
                [
                    "args",
                    "()"
                ],
                [
                    "kwargs",
                    "{}"
                ]
            ]
        },
        {
            "ref": [
                "main",
                "script",
                "value",
                "value_'music_flow'",
                "value_'node4'"
            ],
            "id": [
                "NODE",
                "'music_flow'",
                "'node4'"
            ]
        },
        {
            "id": [
                "NONE"
            ]
        }
    ],
    "links": [
        {
            "label_ref": [
                "main",
                "script",
                "value",
                "value_GLOBAL",
                "value_TRANSITIONS",
                "key_('greeting_flow', 'node1', 1.1)"
            ],
            "label": "('greeting_flow', 'node1', 1.1)",
            "condition_ref": [
                "main",
                "script",
                "value",
                "value_GLOBAL",
                "value_TRANSITIONS",
                "value_('greeting_flow', 'node1', 1.1)"
            ],
            "condition": "cnd.regexp('\\\\b(hi|hello)\\\\b', re.I)",
            "source": [
                "GLOBAL_NODE",
                "GLOBAL"
            ],
            "target": [
                "NODE",
                "'greeting_flow'",
                "'node1'"
            ],
            "key": 0
        },
        {
            "label_ref": [
                "main",
                "script",
                "value",
                "value_GLOBAL",
                "value_TRANSITIONS",
                "key_('music_flow', 'node1', 1.1)"
            ],
            "label": "('music_flow', 'node1', 1.1)",
            "condition_ref": [
                "main",
                "script",
                "value",
                "value_GLOBAL",
                "value_TRANSITIONS",
                "value_('music_flow', 'node1', 1.1)"
            ],
            "condition": "cnd.regexp('talk about music')",
            "source": [
                "GLOBAL_NODE",
                "GLOBAL"
            ],
            "target": [
                "NODE",
                "'music_flow'",
                "'node1'"
            ],
            "key": 0
        },
        {
            "label_ref": [
                "main",
                "script",
                "value",
                "value_GLOBAL",
                "value_TRANSITIONS",
                "key_lbl.to_fallback(0.1)"
            ],
            "label": "lbl.to_fallback(0.1)",
            "condition_ref": [
                "main",
                "script",
                "value",
                "value_GLOBAL",
                "value_TRANSITIONS",
                "value_lbl.to_fallback(0.1)"
            ],
            "condition": "cnd.true()",
            "source": [
                "GLOBAL_NODE",
                "GLOBAL"
            ],
            "target": [
                "LABEL",
                "to_fallback",
                [
                    "priority",
                    "0.1"
                ],
                [
                    "args",
                    "()"
                ],
                [
                    "kwargs",
                    "{}"
                ]
            ],
            "key": 0
        },
        {
            "label_ref": [
                "main",
                "script",
                "value",
                "value_GLOBAL",
                "value_TRANSITIONS",
                "key_lbl.forward()"
            ],
            "label": "lbl.forward()",
            "condition_ref": [
                "main",
                "script",
                "value",
                "value_GLOBAL",
                "value_TRANSITIONS",
                "value_lbl.forward()"
            ],
            "condition": "cnd.all([cnd.regexp('next\\\\b'), cnd.has_last_labels(labels=[('music_flow', i) for i in ['node2', 'node3']])])",
            "source": [
                "GLOBAL_NODE",
                "GLOBAL"
            ],
            "target": [
                "LABEL",
                "forward",
                [
                    "priority",
                    "None"
                ],
                [
                    "cyclicality_flag",
                    "True"
                ],
                [
                    "args",
                    "()"
                ],
                [
                    "kwargs",
                    "{}"
                ]
            ],
            "key": 0
        },
        {
            "label_ref": [
                "main",
                "script",
                "value",
                "value_GLOBAL",
                "value_TRANSITIONS",
                "key_lbl.repeat(0.2)"
            ],
            "label": "lbl.repeat(0.2)",
            "condition_ref": [
                "main",
                "script",
                "value",
                "value_GLOBAL",
                "value_TRANSITIONS",
                "value_lbl.repeat(0.2)"
            ],
            "condition": "cnd.all([cnd.regexp('repeat', re.I), cnd.negation(cnd.has_last_labels(flow_labels=['global_flow']))])",
            "source": [
                "GLOBAL_NODE",
                "GLOBAL"
            ],
            "target": [
                "LABEL",
                "repeat",
                [
                    "priority",
                    "0.2"
                ],
                [
                    "args",
                    "()"
                ],
                [
                    "kwargs",
                    "{}"
                ]
            ],
            "key": 0
        },
        {
            "label_ref": [
                "main",
                "script",
                "value",
                "value_'greeting_flow'",
                "value_'node1'",
                "value_TRANSITIONS",
                "key_('global_flow', 'fallback_node', 0.1)"
            ],
            "label": "('global_flow', 'fallback_node', 0.1)",
            "condition_ref": [
                "main",
                "script",
                "value",
                "value_'greeting_flow'",
                "value_'node1'",
                "value_TRANSITIONS",
                "value_('global_flow', 'fallback_node', 0.1)"
            ],
            "condition": "cnd.true()",
            "source": [
                "NODE",
                "'greeting_flow'",
                "'node1'"
            ],
            "target": [
                "NODE",
                "'global_flow'",
                "'fallback_node'"
            ],
            "key": 0
        },
        {
            "label_ref": [
                "main",
                "script",
                "value",
                "value_'greeting_flow'",
                "value_'node1'",
                "value_TRANSITIONS",
                "key_'node2'"
            ],
            "label": "'node2'",
            "condition_ref": [
                "main",
                "script",
                "value",
                "value_'greeting_flow'",
                "value_'node1'",
                "value_TRANSITIONS",
                "value_'node2'"
            ],
            "condition": "cnd.regexp('how are you')",
            "source": [
                "NODE",
                "'greeting_flow'",
                "'node1'"
            ],
            "target": [
                "NODE",
                "'greeting_flow'",
                "'node2'"
            ],
            "key": 0
        },
        {
            "label_ref": [
                "main",
                "script",
                "value",
                "value_'music_flow'",
                "value_'node1'",
                "value_TRANSITIONS",
                "key_lbl.forward()"
            ],
            "label": "lbl.forward()",
            "condition_ref": [
                "main",
                "script",
                "value",
                "value_'music_flow'",
                "value_'node1'",
                "value_TRANSITIONS",
                "value_lbl.forward()"
            ],
            "condition": "cnd.regexp('yes|yep|ok', re.IGNORECASE)",
            "source": [
                "NODE",
                "'music_flow'",
                "'node1'"
            ],
            "target": [
                "LABEL",
                "forward",
                [
                    "priority",
                    "None"
                ],
                [
                    "cyclicality_flag",
                    "True"
                ],
                [
                    "args",
                    "()"
                ],
                [
                    "kwargs",
                    "{}"
                ]
            ],
            "key": 0
        },
        {
            "label_ref": [
                "main",
                "script",
                "value",
                "value_'music_flow'",
                "value_'node1'",
                "value_TRANSITIONS",
                "key_lbl.to_fallback()"
            ],
            "label": "lbl.to_fallback()",
            "condition_ref": [
                "main",
                "script",
                "value",
                "value_'music_flow'",
                "value_'node1'",
                "value_TRANSITIONS",
                "value_lbl.to_fallback()"
            ],
            "condition": "cnd.true()",
            "source": [
                "NODE",
                "'music_flow'",
                "'node1'"
            ],
            "target": [
                "LABEL",
                "to_fallback",
                [
                    "priority",
                    "None"
                ],
                [
                    "args",
                    "()"
                ],
                [
                    "kwargs",
                    "{}"
                ]
            ],
            "key": 0
        },
        {
            "label_ref": [
                "flow",
                "global_flow",
                "value",
                "value_'start_node'",
                "value_TRANSITIONS",
                "key_('music_flow', 'node1')"
            ],
            "label": "('music_flow', 'node1')",
            "condition_ref": [
                "flow",
                "global_flow",
                "value",
                "value_'start_node'",
                "value_TRANSITIONS",
                "value_('music_flow', 'node1')"
            ],
            "condition": "cnd.regexp('talk about music')",
            "source": [
                "NODE",
                "'global_flow'",
                "'start_node'"
            ],
            "target": [
                "NODE",
                "'music_flow'",
                "'node1'"
            ],
            "key": 0
        },
        {
            "label_ref": [
                "flow",
                "global_flow",
                "value",
                "value_'start_node'",
                "value_TRANSITIONS",
                "key_('greeting_flow', 'node1')"
            ],
            "label": "('greeting_flow', 'node1')",
            "condition_ref": [
                "flow",
                "global_flow",
                "value",
                "value_'start_node'",
                "value_TRANSITIONS",
                "value_('greeting_flow', 'node1')"
            ],
            "condition": "cnd.regexp('hi|hello', re.IGNORECASE)",
            "source": [
                "NODE",
                "'global_flow'",
                "'start_node'"
            ],
            "target": [
                "NODE",
                "'greeting_flow'",
                "'node1'"
            ],
            "key": 0
        },
        {
            "label_ref": [
                "flow",
                "global_flow",
                "value",
                "value_'start_node'",
                "value_TRANSITIONS",
                "key_'fallback_node'"
            ],
            "label": "'fallback_node'",
            "condition_ref": [
                "flow",
                "global_flow",
                "value",
                "value_'start_node'",
                "value_TRANSITIONS",
                "value_'fallback_node'"
            ],
            "condition": "cnd.true()",
            "source": [
                "NODE",
                "'global_flow'",
                "'start_node'"
            ],
            "target": [
                "NODE",
                "'global_flow'",
                "'fallback_node'"
            ],
            "key": 0
        },
        {
            "label_ref": [
                "flow",
                "global_flow",
                "value",
                "value_'fallback_node'",
                "value_TRANSITIONS",
                "key_('music_flow', 'node1')"
            ],
            "label": "('music_flow', 'node1')",
            "condition_ref": [
                "flow",
                "global_flow",
                "value",
                "value_'fallback_node'",
                "value_TRANSITIONS",
                "value_('music_flow', 'node1')"
            ],
            "condition": "cnd.regexp('talk about music')",
            "source": [
                "NODE",
                "'global_flow'",
                "'fallback_node'"
            ],
            "target": [
                "NODE",
                "'music_flow'",
                "'node1'"
            ],
            "key": 0
        },
        {
            "label_ref": [
                "flow",
                "global_flow",
                "value",
                "value_'fallback_node'",
                "value_TRANSITIONS",
                "key_('greeting_flow', 'node1')"
            ],
            "label": "('greeting_flow', 'node1')",
            "condition_ref": [
                "flow",
                "global_flow",
                "value",
                "value_'fallback_node'",
                "value_TRANSITIONS",
                "value_('greeting_flow', 'node1')"
            ],
            "condition": "cnd.regexp('hi|hello', re.IGNORECASE)",
            "source": [
                "NODE",
                "'global_flow'",
                "'fallback_node'"
            ],
            "target": [
                "NODE",
                "'greeting_flow'",
                "'node1'"
            ],
            "key": 0
        },
        {
            "label_ref": [
                "flow",
                "global_flow",
                "value",
                "value_'fallback_node'",
                "value_TRANSITIONS",
                "key_lbl.previous()"
            ],
            "label": "lbl.previous()",
            "condition_ref": [
                "flow",
                "global_flow",
                "value",
                "value_'fallback_node'",
                "value_TRANSITIONS",
                "value_lbl.previous()"
            ],
            "condition": "cnd.regexp('previous', re.IGNORECASE)",
            "source": [
                "NODE",
                "'global_flow'",
                "'fallback_node'"
            ],
            "target": [
                "LABEL",
                "previous",
                [
                    "priority",
                    "None"
                ],
                [
                    "args",
                    "()"
                ],
                [
                    "kwargs",
                    "{}"
                ]
            ],
            "key": 0
        },
        {
            "label_ref": [
                "flow",
                "global_flow",
                "value",
                "value_'fallback_node'",
                "value_TRANSITIONS",
                "key_lbl.repeat()"
            ],
            "label": "lbl.repeat()",
            "condition_ref": [
                "flow",
                "global_flow",
                "value",
                "value_'fallback_node'",
                "value_TRANSITIONS",
                "value_lbl.repeat()"
            ],
            "condition": "cnd.true()",
            "source": [
                "NODE",
                "'global_flow'",
                "'fallback_node'"
            ],
            "target": [
                "LABEL",
                "repeat",
                [
                    "priority",
                    "None"
                ],
                [
                    "args",
                    "()"
                ],
                [
                    "kwargs",
                    "{}"
                ]
            ],
            "key": 0
        },
        {
            "label_ref": [
                "main",
                "script",
                "value",
                "value_'greeting_flow'",
                "value_'node2'",
                "value_TRANSITIONS",
                "key_lbl.to_fallback(0.1)"
            ],
            "label": "lbl.to_fallback(0.1)",
            "condition_ref": [
                "main",
                "script",
                "value",
                "value_'greeting_flow'",
                "value_'node2'",
                "value_TRANSITIONS",
                "value_lbl.to_fallback(0.1)"
            ],
            "condition": "cnd.true()",
            "source": [
                "NODE",
                "'greeting_flow'",
                "'node2'"
            ],
            "target": [
                "LABEL",
                "to_fallback",
                [
                    "priority",
                    "0.1"
                ],
                [
                    "args",
                    "()"
                ],
                [
                    "kwargs",
                    "{}"
                ]
            ],
            "key": 0
        },
        {
            "label_ref": [
                "main",
                "script",
                "value",
                "value_'greeting_flow'",
                "value_'node2'",
                "value_TRANSITIONS",
                "key_lbl.forward(0.5)"
            ],
            "label": "lbl.forward(0.5)",
            "condition_ref": [
                "main",
                "script",
                "value",
                "value_'greeting_flow'",
                "value_'node2'",
                "value_TRANSITIONS",
                "value_lbl.forward(0.5)"
            ],
            "condition": "cnd.regexp('talk about')",
            "source": [
                "NODE",
                "'greeting_flow'",
                "'node2'"
            ],
            "target": [
                "LABEL",
                "forward",
                [
                    "priority",
                    "0.5"
                ],
                [
                    "cyclicality_flag",
                    "True"
                ],
                [
                    "args",
                    "()"
                ],
                [
                    "kwargs",
                    "{}"
                ]
            ],
            "key": 0
        },
        {
            "label_ref": [
                "main",
                "script",
                "value",
                "value_'greeting_flow'",
                "value_'node2'",
                "value_TRANSITIONS",
                "key_('music_flow', 'node1')"
            ],
            "label": "('music_flow', 'node1')",
            "condition_ref": [
                "main",
                "script",
                "value",
                "value_'greeting_flow'",
                "value_'node2'",
                "value_TRANSITIONS",
                "value_('music_flow', 'node1')"
            ],
            "condition": "cnd.regexp('talk about music')",
            "source": [
                "NODE",
                "'greeting_flow'",
                "'node2'"
            ],
            "target": [
                "NODE",
                "'music_flow'",
                "'node1'"
            ],
            "key": 0
        },
        {
            "label_ref": [
                "main",
                "script",
                "value",
                "value_'greeting_flow'",
                "value_'node2'",
                "value_TRANSITIONS",
                "key_lbl.previous()"
            ],
            "label": "lbl.previous()",
            "condition_ref": [
                "main",
                "script",
                "value",
                "value_'greeting_flow'",
                "value_'node2'",
                "value_TRANSITIONS",
                "value_lbl.previous()"
            ],
            "condition": "cnd.regexp('previous', re.IGNORECASE)",
            "source": [
                "NODE",
                "'greeting_flow'",
                "'node2'"
            ],
            "target": [
                "LABEL",
                "previous",
                [
                    "priority",
                    "None"
                ],
                [
                    "args",
                    "()"
                ],
                [
                    "kwargs",
                    "{}"
                ]
            ],
            "key": 0
        },
        {
            "label_ref": [
                "main",
                "script",
                "value",
                "value_'greeting_flow'",
                "value_'node3'",
                "value_TRANSITIONS",
                "key_lbl.forward()"
            ],
            "label": "lbl.forward()",
            "condition_ref": [
                "main",
                "script",
                "value",
                "value_'greeting_flow'",
                "value_'node3'",
                "value_TRANSITIONS",
                "value_lbl.forward()"
            ],
            "condition": "cnd.regexp('bye')",
            "source": [
                "NODE",
                "'greeting_flow'",
                "'node3'"
            ],
            "target": [
                "LABEL",
                "forward",
                [
                    "priority",
                    "None"
                ],
                [
                    "cyclicality_flag",
                    "True"
                ],
                [
                    "args",
                    "()"
                ],
                [
                    "kwargs",
                    "{}"
                ]
            ],
            "key": 0
        },
        {
            "label_ref": [
                "main",
                "script",
                "value",
                "value_'greeting_flow'",
                "value_'node4'",
                "value_TRANSITIONS",
                "key_'node1'"
            ],
            "label": "'node1'",
            "condition_ref": [
                "main",
                "script",
                "value",
                "value_'greeting_flow'",
                "value_'node4'",
                "value_TRANSITIONS",
                "value_'node1'"
            ],
            "condition": "cnd.regexp('hi|hello', re.IGNORECASE)",
            "source": [
                "NODE",
                "'greeting_flow'",
                "'node4'"
            ],
            "target": [
                "NODE",
                "'greeting_flow'",
                "'node1'"
            ],
            "key": 0
        },
        {
            "label_ref": [
                "main",
                "script",
                "value",
                "value_'greeting_flow'",
                "value_'node4'",
                "value_TRANSITIONS",
                "key_lbl.to_fallback()"
            ],
            "label": "lbl.to_fallback()",
            "condition_ref": [
                "main",
                "script",
                "value",
                "value_'greeting_flow'",
                "value_'node4'",
                "value_TRANSITIONS",
                "value_lbl.to_fallback()"
            ],
            "condition": "cnd.true()",
            "source": [
                "NODE",
                "'greeting_flow'",
                "'node4'"
            ],
            "target": [
                "LABEL",
                "to_fallback",
                [
                    "priority",
                    "None"
                ],
                [
                    "args",
                    "()"
                ],
                [
                    "kwargs",
                    "{}"
                ]
            ],
            "key": 0
        },
        {
            "label_ref": [
                "main",
                "script",
                "value",
                "value_'music_flow'",
                "value_'node2'",
                "value_TRANSITIONS",
                "key_lbl.forward()"
            ],
            "label": "lbl.forward()",
            "condition_ref": [
                "main",
                "script",
                "value",
                "value_'music_flow'",
                "value_'node2'",
                "value_TRANSITIONS",
                "value_lbl.forward()"
            ],
            "condition": "cnd.regexp('next', re.IGNORECASE)",
            "source": [
                "NODE",
                "'music_flow'",
                "'node2'"
            ],
            "target": [
                "LABEL",
                "forward",
                [
                    "priority",
                    "None"
                ],
                [
                    "cyclicality_flag",
                    "True"
                ],
                [
                    "args",
                    "()"
                ],
                [
                    "kwargs",
                    "{}"
                ]
            ],
            "key": 0
        },
        {
            "label_ref": [
                "main",
                "script",
                "value",
                "value_'music_flow'",
                "value_'node2'",
                "value_TRANSITIONS",
                "key_lbl.repeat()"
            ],
            "label": "lbl.repeat()",
            "condition_ref": [
                "main",
                "script",
                "value",
                "value_'music_flow'",
                "value_'node2'",
                "value_TRANSITIONS",
                "value_lbl.repeat()"
            ],
            "condition": "cnd.regexp('repeat', re.IGNORECASE)",
            "source": [
                "NODE",
                "'music_flow'",
                "'node2'"
            ],
            "target": [
                "LABEL",
                "repeat",
                [
                    "priority",
                    "None"
                ],
                [
                    "args",
                    "()"
                ],
                [
                    "kwargs",
                    "{}"
                ]
            ],
            "key": 0
        },
        {
            "label_ref": [
                "main",
                "script",
                "value",
                "value_'music_flow'",
                "value_'node2'",
                "value_TRANSITIONS",
                "key_lbl.to_fallback()"
            ],
            "label": "lbl.to_fallback()",
            "condition_ref": [
                "main",
                "script",
                "value",
                "value_'music_flow'",
                "value_'node2'",
                "value_TRANSITIONS",
                "value_lbl.to_fallback()"
            ],
            "condition": "cnd.true()",
            "source": [
                "NODE",
                "'music_flow'",
                "'node2'"
            ],
            "target": [
                "LABEL",
                "to_fallback",
                [
                    "priority",
                    "None"
                ],
                [
                    "args",
                    "()"
                ],
                [
                    "kwargs",
                    "{}"
                ]
            ],
            "key": 0
        },
        {
            "label_ref": [
                "main",
                "script",
                "value",
                "value_'music_flow'",
                "value_'node3'",
                "value_TRANSITIONS",
                "key_lbl.forward()"
            ],
            "label": "lbl.forward()",
            "condition_ref": [
                "main",
                "script",
                "value",
                "value_'music_flow'",
                "value_'node3'",
                "value_TRANSITIONS",
                "value_lbl.forward()"
            ],
            "condition": "cnd.regexp('next', re.IGNORECASE)",
            "source": [
                "NODE",
                "'music_flow'",
                "'node3'"
            ],
            "target": [
                "LABEL",
                "forward",
                [
                    "priority",
                    "None"
                ],
                [
                    "cyclicality_flag",
                    "True"
                ],
                [
                    "args",
                    "()"
                ],
                [
                    "kwargs",
                    "{}"
                ]
            ],
            "key": 0
        },
        {
            "label_ref": [
                "main",
                "script",
                "value",
                "value_'music_flow'",
                "value_'node3'",
                "value_TRANSITIONS",
                "key_lbl.backward()"
            ],
            "label": "lbl.backward()",
            "condition_ref": [
                "main",
                "script",
                "value",
                "value_'music_flow'",
                "value_'node3'",
                "value_TRANSITIONS",
                "value_lbl.backward()"
            ],
            "condition": "cnd.regexp('back', re.IGNORECASE)",
            "source": [
                "NODE",
                "'music_flow'",
                "'node3'"
            ],
            "target": [
                "LABEL",
                "backward",
                [
                    "priority",
                    "None"
                ],
                [
                    "cyclicality_flag",
                    "True"
                ],
                [
                    "args",
                    "()"
                ],
                [
                    "kwargs",
                    "{}"
                ]
            ],
            "key": 0
        },
        {
            "label_ref": [
                "main",
                "script",
                "value",
                "value_'music_flow'",
                "value_'node3'",
                "value_TRANSITIONS",
                "key_lbl.repeat()"
            ],
            "label": "lbl.repeat()",
            "condition_ref": [
                "main",
                "script",
                "value",
                "value_'music_flow'",
                "value_'node3'",
                "value_TRANSITIONS",
                "value_lbl.repeat()"
            ],
            "condition": "cnd.regexp('repeat', re.IGNORECASE)",
            "source": [
                "NODE",
                "'music_flow'",
                "'node3'"
            ],
            "target": [
                "LABEL",
                "repeat",
                [
                    "priority",
                    "None"
                ],
                [
                    "args",
                    "()"
                ],
                [
                    "kwargs",
                    "{}"
                ]
            ],
            "key": 0
        },
        {
            "label_ref": [
                "main",
                "script",
                "value",
                "value_'music_flow'",
                "value_'node3'",
                "value_TRANSITIONS",
                "key_lbl.to_fallback()"
            ],
            "label": "lbl.to_fallback()",
            "condition_ref": [
                "main",
                "script",
                "value",
                "value_'music_flow'",
                "value_'node3'",
                "value_TRANSITIONS",
                "value_lbl.to_fallback()"
            ],
            "condition": "cnd.true()",
            "source": [
                "NODE",
                "'music_flow'",
                "'node3'"
            ],
            "target": [
                "LABEL",
                "to_fallback",
                [
                    "priority",
                    "None"
                ],
                [
                    "args",
                    "()"
                ],
                [
                    "kwargs",
                    "{}"
                ]
            ],
            "key": 0
        },
        {
            "label_ref": [
                "main",
                "script",
                "value",
                "value_'music_flow'",
                "value_'node4'",
                "value_TRANSITIONS",
                "key_transitions.greeting_flow_n2_transition"
            ],
            "label": "transitions.greeting_flow_n2_transition",
            "condition_ref": [
                "main",
                "script",
                "value",
                "value_'music_flow'",
                "value_'node4'",
                "value_TRANSITIONS",
                "value_transitions.greeting_flow_n2_transition"
            ],
            "condition": "cnd.regexp('next', re.IGNORECASE)",
            "source": [
                "NODE",
                "'music_flow'",
                "'node4'"
            ],
            "target": [
                "NONE"
            ],
            "key": 0
        },
        {
            "label_ref": [
                "main",
                "script",
                "value",
                "value_'music_flow'",
                "value_'node4'",
                "value_TRANSITIONS",
                "key_transitions.high_priority_node_transition('greeting_flow', 'node4')"
            ],
            "label": "transitions.high_priority_node_transition('greeting_flow', 'node4')",
            "condition_ref": [
                "main",
                "script",
                "value",
                "value_'music_flow'",
                "value_'node4'",
                "value_TRANSITIONS",
                "value_transitions.high_priority_node_transition('greeting_flow', 'node4')"
            ],
            "condition": "cnd.regexp('next time', re.IGNORECASE)",
            "source": [
                "NODE",
                "'music_flow'",
                "'node4'"
            ],
            "target": [
                "NONE"
            ],
            "key": 1
        },
        {
            "label_ref": [
                "main",
                "script",
                "value",
                "value_'music_flow'",
                "value_'node4'",
                "value_TRANSITIONS",
                "key_lbl.to_fallback()"
            ],
            "label": "lbl.to_fallback()",
            "condition_ref": [
                "main",
                "script",
                "value",
                "value_'music_flow'",
                "value_'node4'",
                "value_TRANSITIONS",
                "value_lbl.to_fallback()"
            ],
            "condition": "cnd.true()",
            "source": [
                "NODE",
                "'music_flow'",
                "'node4'"
            ],
            "target": [
                "LABEL",
                "to_fallback",
                [
                    "priority",
                    "None"
                ],
                [
                    "args",
                    "()"
                ],
                [
                    "kwargs",
                    "{}"
                ]
            ],
            "key": 0
        }
    ]
}